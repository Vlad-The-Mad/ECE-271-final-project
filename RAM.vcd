$date
	Fri Jun  8 22:43:31 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test $end
$var wire 16 ! word [15:0] $end
$var reg 16 " read_address [15:0] $end
$var reg 1 # read_rddisEN $end
$var reg 1 $ write_EN $end
$var reg 16 % write_address [15:0] $end
$var reg 16 & write_value [15:0] $end
$scope module us $end
$var wire 16 ' read_address [15:0] $end
$var wire 1 # read_rddisEN $end
$var wire 1 $ write_EN $end
$var wire 16 ( write_address [15:0] $end
$var wire 16 ) write_value [15:0] $end
$var reg 10 * reduced_read_address [9:0] $end
$var reg 10 + reduced_write_address [9:0] $end
$var reg 16 , word [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
x$
x#
bx "
bx !
$end
#100
b1010000000001111 !
b1010000000001111 ,
b0 *
b0 "
b0 '
0#
#300
b0 &
b0 )
1$
#400
b1 +
b1010 &
b1010 )
b1 %
b1 (
#500
b10 +
b10100 &
b10100 )
b10 %
b10 (
#600
b1010 !
b1010 ,
b1 *
b1 "
b1 '
#700
1#
b10 "
b10 '
#800
b11 "
b11 '
#900
b1010000000001111 !
b1010000000001111 ,
b11 *
b1111101000 &
b1111101000 )
0$
0#
#1000
b10100 !
b10100 ,
b10 *
b10 "
b10 '
#1100
b1010000000001111 !
b1010000000001111 ,
b0 +
b0 *
b10000000000 %
b10000000000 (
b10000000000 "
b10000000000 '
#1200
b1111101000 !
b1111101000 ,
1$
#1400
