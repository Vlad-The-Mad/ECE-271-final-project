$date
	Thu Jun  7 14:39:27 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test $end
$var wire 1 ! write_reg_from_memory $end
$var wire 1 " ten_branch $end
$var wire 1 # state_machine_reset $end
$var wire 1 $ reset_reg_file $end
$var wire 1 % reg_file_wrEN $end
$var wire 1 & read_2EN $end
$var wire 1 ' read_1EN $end
$var wire 1 ( output_reset $end
$var wire 1 ) mem_add_reset $end
$var wire 1 * lineb_ex $end
$var wire 1 + extender_reset $end
$var wire 1 , alu_linea $end
$var wire 2 - alu_control [1:0] $end
$var wire 1 . RAM_wrEN $end
$var wire 1 / PC_reset $end
$var wire 1 0 PC_or_read_mem $end
$var wire 1 1 PC_in_op $end
$var wire 1 2 PC_EN $end
$var wire 1 3 LT_state $end
$var wire 1 4 EN_output $end
$var wire 1 5 EN_mem_add $end
$var reg 1 6 LT_flag $end
$var reg 1 7 branch_flag $end
$var reg 1 8 clock $end
$var reg 1 9 control_reset $end
$var reg 4 : opcode [3:0] $end
$var reg 3 ; state [2:0] $end
$scope module u1 $end
$var wire 1 6 LT_flag $end
$var wire 1 7 branch_flag $end
$var wire 4 < opcode [3:0] $end
$var wire 3 = state [2:0] $end
$var reg 1 5 EN_mem_add $end
$var reg 1 4 EN_output $end
$var reg 1 3 LT_state $end
$var reg 1 2 PC_EN $end
$var reg 1 1 PC_in_op $end
$var reg 1 0 PC_or_read_mem $end
$var reg 1 / PC_reset $end
$var reg 1 . RAM_wrEN $end
$var reg 2 > alu_control [1:0] $end
$var reg 1 , alu_linea $end
$var reg 1 ? control_reset $end
$var reg 1 + extender_reset $end
$var reg 1 @ less_than_flag $end
$var reg 1 * lineb_ex $end
$var reg 1 ) mem_add_reset $end
$var reg 4 A opcode_store [3:0] $end
$var reg 1 ( output_reset $end
$var reg 1 ' read_1EN $end
$var reg 1 & read_2EN $end
$var reg 1 % reg_file_wrEN $end
$var reg 1 $ reset_reg_file $end
$var reg 1 # state_machine_reset $end
$var reg 1 " ten_branch $end
$var reg 1 ! write_reg_from_memory $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx A
x@
x?
bx >
bx =
bx <
bx ;
bx :
19
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
bx -
x,
x+
x*
x)
x(
x'
x&
x%
x$
x#
x"
x!
$end
#100
09
#200
