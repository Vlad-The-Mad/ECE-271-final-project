$date
	Tue Jun  5 17:09:31 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_reg_bank $end
$var wire 16 ! line_b [15:0] $end
$var wire 16 " line_a [15:0] $end
$var reg 1 # clk $end
$var reg 5 $ read_1 [4:0] $end
$var reg 1 % read_1EN $end
$var reg 5 & read_2 [4:0] $end
$var reg 1 ' read_2EN $end
$var reg 1 ( reset $end
$var reg 1 ) writeEN $end
$var reg 5 * write_reg_address [4:0] $end
$var reg 16 + write_val [15:0] $end
$scope module u1 $end
$var wire 1 # clk $end
$var wire 5 , read_1 [4:0] $end
$var wire 1 % read_1EN $end
$var wire 5 - read_2 [4:0] $end
$var wire 1 ' read_2EN $end
$var wire 1 ( reset $end
$var wire 1 ) writeEN $end
$var wire 5 . write_reg_address [4:0] $end
$var wire 16 / write_val [15:0] $end
$var reg 16 0 line_a [15:0] $end
$var reg 16 1 line_b [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 1
bx 0
b1010 /
b1111 .
b100 -
b11 ,
b1010 +
b1111 *
0)
1(
1'
b100 &
1%
b11 $
0#
bx "
bx !
$end
#50
1#
#100
0#
0(
#150
b0 !
b0 1
b0 "
b0 0
1#
#200
0#
b1111 $
b1111 ,
1(
#250
1#
#300
0#
b10100 +
b10100 /
1)
#350
1#
#400
0#
b1010 +
b1010 /
b100 *
b100 .
#450
b10100 "
b10100 0
1#
#500
b1010 !
b1010 1
0#
0(
#550
b0 !
b0 1
b0 "
b0 0
1#
#600
0#
1(
#650
1#
#700
0#
